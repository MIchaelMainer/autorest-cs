// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Graph
{
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for UsersinferenceClassification.
    /// </summary>
    public static partial class UsersinferenceClassificationExtensions
    {
            /// <summary>
            /// Get overrides from users
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='userId'>
            /// key: id of user
            /// </param>
            /// <param name='orderby'>
            /// Order items by property values
            /// </param>
            /// <param name='select'>
            /// Select properties to be returned
            /// </param>
            /// <param name='expand'>
            /// Expand related entities
            /// </param>
            public static CollectionofinferenceClassificationOverride ListOverrides(this IUsersinferenceClassification operations, string userId, IList<string> orderby = default(IList<string>), IList<string> select = default(IList<string>), IList<string> expand = default(IList<string>))
            {
                return operations.ListOverridesAsync(userId, orderby, select, expand).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get overrides from users
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='userId'>
            /// key: id of user
            /// </param>
            /// <param name='orderby'>
            /// Order items by property values
            /// </param>
            /// <param name='select'>
            /// Select properties to be returned
            /// </param>
            /// <param name='expand'>
            /// Expand related entities
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<CollectionofinferenceClassificationOverride> ListOverridesAsync(this IUsersinferenceClassification operations, string userId, IList<string> orderby = default(IList<string>), IList<string> select = default(IList<string>), IList<string> expand = default(IList<string>), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListOverridesWithHttpMessagesAsync(userId, orderby, select, expand, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Create new navigation property to overrides for users
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// New navigation property
            /// </param>
            /// <param name='userId'>
            /// key: id of user
            /// </param>
            public static MicrosoftgraphinferenceClassificationOverride CreateOverrides(this IUsersinferenceClassification operations, MicrosoftgraphinferenceClassificationOverride body, string userId)
            {
                return operations.CreateOverridesAsync(body, userId).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create new navigation property to overrides for users
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// New navigation property
            /// </param>
            /// <param name='userId'>
            /// key: id of user
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<MicrosoftgraphinferenceClassificationOverride> CreateOverridesAsync(this IUsersinferenceClassification operations, MicrosoftgraphinferenceClassificationOverride body, string userId, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateOverridesWithHttpMessagesAsync(body, userId, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Get overrides from users
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='userId'>
            /// key: id of user
            /// </param>
            /// <param name='inferenceClassificationOverrideId'>
            /// key: id of inferenceClassificationOverride
            /// </param>
            /// <param name='select'>
            /// Select properties to be returned
            /// </param>
            /// <param name='expand'>
            /// Expand related entities
            /// </param>
            public static MicrosoftgraphinferenceClassificationOverride GetOverrides(this IUsersinferenceClassification operations, string userId, string inferenceClassificationOverrideId, IList<string> select = default(IList<string>), IList<string> expand = default(IList<string>))
            {
                return operations.GetOverridesAsync(userId, inferenceClassificationOverrideId, select, expand).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get overrides from users
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='userId'>
            /// key: id of user
            /// </param>
            /// <param name='inferenceClassificationOverrideId'>
            /// key: id of inferenceClassificationOverride
            /// </param>
            /// <param name='select'>
            /// Select properties to be returned
            /// </param>
            /// <param name='expand'>
            /// Expand related entities
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<MicrosoftgraphinferenceClassificationOverride> GetOverridesAsync(this IUsersinferenceClassification operations, string userId, string inferenceClassificationOverrideId, IList<string> select = default(IList<string>), IList<string> expand = default(IList<string>), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetOverridesWithHttpMessagesAsync(userId, inferenceClassificationOverrideId, select, expand, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Update the navigation property overrides in users
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// New navigation property values
            /// </param>
            /// <param name='userId'>
            /// key: id of user
            /// </param>
            /// <param name='inferenceClassificationOverrideId'>
            /// key: id of inferenceClassificationOverride
            /// </param>
            public static void UpdateOverrides(this IUsersinferenceClassification operations, MicrosoftgraphinferenceClassificationOverride body, string userId, string inferenceClassificationOverrideId)
            {
                operations.UpdateOverridesAsync(body, userId, inferenceClassificationOverrideId).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Update the navigation property overrides in users
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// New navigation property values
            /// </param>
            /// <param name='userId'>
            /// key: id of user
            /// </param>
            /// <param name='inferenceClassificationOverrideId'>
            /// key: id of inferenceClassificationOverride
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task UpdateOverridesAsync(this IUsersinferenceClassification operations, MicrosoftgraphinferenceClassificationOverride body, string userId, string inferenceClassificationOverrideId, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.UpdateOverridesWithHttpMessagesAsync(body, userId, inferenceClassificationOverrideId, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Delete navigation property overrides for users
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='userId'>
            /// key: id of user
            /// </param>
            /// <param name='inferenceClassificationOverrideId'>
            /// key: id of inferenceClassificationOverride
            /// </param>
            /// <param name='ifMatch'>
            /// ETag
            /// </param>
            public static void DeleteOverrides(this IUsersinferenceClassification operations, string userId, string inferenceClassificationOverrideId, string ifMatch = default(string))
            {
                operations.DeleteOverridesAsync(userId, inferenceClassificationOverrideId, ifMatch).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Delete navigation property overrides for users
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='userId'>
            /// key: id of user
            /// </param>
            /// <param name='inferenceClassificationOverrideId'>
            /// key: id of inferenceClassificationOverride
            /// </param>
            /// <param name='ifMatch'>
            /// ETag
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteOverridesAsync(this IUsersinferenceClassification operations, string userId, string inferenceClassificationOverrideId, string ifMatch = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteOverridesWithHttpMessagesAsync(userId, inferenceClassificationOverrideId, ifMatch, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

    }
}
