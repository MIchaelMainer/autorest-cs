// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Graph.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// multiValueLegacyExtendedProperty
    /// </summary>
    public partial class MicrosoftgraphmultiValueLegacyExtendedProperty : Microsoftgraphentity
    {
        /// <summary>
        /// Initializes a new instance of the
        /// MicrosoftgraphmultiValueLegacyExtendedProperty class.
        /// </summary>
        public MicrosoftgraphmultiValueLegacyExtendedProperty()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// MicrosoftgraphmultiValueLegacyExtendedProperty class.
        /// </summary>
        /// <param name="additionalProperties">Unmatched properties from the
        /// message are deserialized this collection</param>
        /// <param name="id">Read-only.</param>
        /// <param name="additionalProperties">Unmatched properties from the
        /// message are deserialized this collection</param>
        /// <param name="value">A collection of property values.</param>
        public MicrosoftgraphmultiValueLegacyExtendedProperty(IDictionary<string, object> additionalProperties = default(IDictionary<string, object>), string id = default(string), IList<string> value = default(IList<string>))
            : base(additionalProperties, id)
        {
            // AdditionalProperties = additionalProperties;
            Value = value;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets unmatched properties from the message are deserialized
        /// this collection
        /// </summary>
        // [JsonExtensionData]
        // public IDictionary<string, object> AdditionalProperties { get; set; }

        /// <summary>
        /// Gets or sets a collection of property values.
        /// </summary>
        [JsonProperty(PropertyName = "value")]
        public IList<string> Value { get; set; }

    }
}
