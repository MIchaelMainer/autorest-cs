// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Graph.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// mailFolder
    /// </summary>
    public partial class MicrosoftgraphmailFolder : Microsoftgraphentity
    {
        /// <summary>
        /// Initializes a new instance of the MicrosoftgraphmailFolder class.
        /// </summary>
        public MicrosoftgraphmailFolder()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MicrosoftgraphmailFolder class.
        /// </summary>
        /// <param name="additionalProperties">Unmatched properties from the
        /// message are deserialized this collection</param>
        /// <param name="id">Read-only.</param>
        /// <param name="additionalProperties">Unmatched properties from the
        /// message are deserialized this collection</param>
        /// <param name="childFolderCount">The number of immediate child
        /// mailFolders in the current mailFolder.</param>
        /// <param name="displayName">The mailFolder's display name.</param>
        /// <param name="parentFolderId">The unique identifier for the
        /// mailFolder's parent mailFolder.</param>
        /// <param name="totalItemCount">The number of items in the
        /// mailFolder.</param>
        /// <param name="unreadItemCount">The number of items in the mailFolder
        /// marked as unread.</param>
        /// <param name="childFolders">The collection of child folders in the
        /// mailFolder.</param>
        /// <param name="messageRules">The collection of rules that apply to
        /// the user's Inbox folder.</param>
        /// <param name="messages">The collection of messages in the
        /// mailFolder.</param>
        /// <param name="multiValueExtendedProperties">The collection of
        /// multi-value extended properties defined for the mailFolder.
        /// Read-only. Nullable.</param>
        /// <param name="singleValueExtendedProperties">The collection of
        /// single-value extended properties defined for the mailFolder.
        /// Read-only. Nullable.</param>
        public MicrosoftgraphmailFolder(string id = default(string), IDictionary<string, object> additionalProperties = default(IDictionary<string, object>), int? childFolderCount = default(int?), string displayName = default(string), string parentFolderId = default(string), int? totalItemCount = default(int?), int? unreadItemCount = default(int?), IList<MicrosoftgraphmailFolder> childFolders = default(IList<MicrosoftgraphmailFolder>), IList<MicrosoftgraphmessageRule> messageRules = default(IList<MicrosoftgraphmessageRule>), IList<Microsoftgraphmessage> messages = default(IList<Microsoftgraphmessage>), IList<MicrosoftgraphmultiValueLegacyExtendedProperty> multiValueExtendedProperties = default(IList<MicrosoftgraphmultiValueLegacyExtendedProperty>), IList<MicrosoftgraphsingleValueLegacyExtendedProperty> singleValueExtendedProperties = default(IList<MicrosoftgraphsingleValueLegacyExtendedProperty>))
            : base(additionalProperties, id)
        {
            AdditionalProperties = additionalProperties;
            ChildFolderCount = childFolderCount;
            DisplayName = displayName;
            ParentFolderId = parentFolderId;
            TotalItemCount = totalItemCount;
            UnreadItemCount = unreadItemCount;
            ChildFolders = childFolders;
            MessageRules = messageRules;
            Messages = messages;
            MultiValueExtendedProperties = multiValueExtendedProperties;
            SingleValueExtendedProperties = singleValueExtendedProperties;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets unmatched properties from the message are deserialized
        /// this collection
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties { get; set; }

        /// <summary>
        /// Gets or sets the number of immediate child mailFolders in the
        /// current mailFolder.
        /// </summary>
        [JsonProperty(PropertyName = "childFolderCount")]
        public int? ChildFolderCount { get; set; }

        /// <summary>
        /// Gets or sets the mailFolder's display name.
        /// </summary>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets or sets the unique identifier for the mailFolder's parent
        /// mailFolder.
        /// </summary>
        [JsonProperty(PropertyName = "parentFolderId")]
        public string ParentFolderId { get; set; }

        /// <summary>
        /// Gets or sets the number of items in the mailFolder.
        /// </summary>
        [JsonProperty(PropertyName = "totalItemCount")]
        public int? TotalItemCount { get; set; }

        /// <summary>
        /// Gets or sets the number of items in the mailFolder marked as
        /// unread.
        /// </summary>
        [JsonProperty(PropertyName = "unreadItemCount")]
        public int? UnreadItemCount { get; set; }

        /// <summary>
        /// Gets or sets the collection of child folders in the mailFolder.
        /// </summary>
        [JsonProperty(PropertyName = "childFolders")]
        public IList<MicrosoftgraphmailFolder> ChildFolders { get; set; }

        /// <summary>
        /// Gets or sets the collection of rules that apply to the user's Inbox
        /// folder.
        /// </summary>
        [JsonProperty(PropertyName = "messageRules")]
        public IList<MicrosoftgraphmessageRule> MessageRules { get; set; }

        /// <summary>
        /// Gets or sets the collection of messages in the mailFolder.
        /// </summary>
        [JsonProperty(PropertyName = "messages")]
        public IList<Microsoftgraphmessage> Messages { get; set; }

        /// <summary>
        /// Gets or sets the collection of multi-value extended properties
        /// defined for the mailFolder. Read-only. Nullable.
        /// </summary>
        [JsonProperty(PropertyName = "multiValueExtendedProperties")]
        public IList<MicrosoftgraphmultiValueLegacyExtendedProperty> MultiValueExtendedProperties { get; set; }

        /// <summary>
        /// Gets or sets the collection of single-value extended properties
        /// defined for the mailFolder. Read-only. Nullable.
        /// </summary>
        [JsonProperty(PropertyName = "singleValueExtendedProperties")]
        public IList<MicrosoftgraphsingleValueLegacyExtendedProperty> SingleValueExtendedProperties { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (ChildFolderCount != null)
            {
                if (ChildFolderCount > 2147483647)
                {
                    throw new ValidationException(ValidationRules.InclusiveMaximum, "ChildFolderCount", 2147483647);
                }
                if (ChildFolderCount < -2147483648)
                {
                    throw new ValidationException(ValidationRules.InclusiveMinimum, "ChildFolderCount", -2147483648);
                }
            }
            if (TotalItemCount != null)
            {
                if (TotalItemCount > 2147483647)
                {
                    throw new ValidationException(ValidationRules.InclusiveMaximum, "TotalItemCount", 2147483647);
                }
                if (TotalItemCount < -2147483648)
                {
                    throw new ValidationException(ValidationRules.InclusiveMinimum, "TotalItemCount", -2147483648);
                }
            }
            if (UnreadItemCount != null)
            {
                if (UnreadItemCount > 2147483647)
                {
                    throw new ValidationException(ValidationRules.InclusiveMaximum, "UnreadItemCount", 2147483647);
                }
                if (UnreadItemCount < -2147483648)
                {
                    throw new ValidationException(ValidationRules.InclusiveMinimum, "UnreadItemCount", -2147483648);
                }
            }
            if (ChildFolders != null)
            {
                foreach (var element in ChildFolders)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
            if (MessageRules != null)
            {
                foreach (var element1 in MessageRules)
                {
                    if (element1 != null)
                    {
                        element1.Validate();
                    }
                }
            }
        }
    }
}
