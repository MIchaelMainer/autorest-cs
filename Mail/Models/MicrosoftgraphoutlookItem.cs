// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Graph.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// outlookItem
    /// </summary>
    public partial class MicrosoftgraphoutlookItem : Microsoftgraphentity
    {
        /// <summary>
        /// Initializes a new instance of the MicrosoftgraphoutlookItem class.
        /// </summary>
        public MicrosoftgraphoutlookItem()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MicrosoftgraphoutlookItem class.
        /// </summary>
        /// <param name="additionalProperties">Unmatched properties from the
        /// message are deserialized this collection</param>
        /// <param name="id">Read-only.</param>
        /// <param name="additionalProperties">Unmatched properties from the
        /// message are deserialized this collection</param>
        /// <param name="categories">The categories associated with the
        /// item</param>
        /// <param name="changeKey">Identifies the version of the item. Every
        /// time the item is changed, changeKey changes as well. This allows
        /// Exchange to apply changes to the correct version of the object.
        /// Read-only.</param>
        /// <param name="createdDateTime">The Timestamp type represents date
        /// and time information using ISO 8601 format and is always in UTC
        /// time. For example, midnight UTC on Jan 1, 2014 would look like
        /// this: '2014-01-01T00:00:00Z'</param>
        /// <param name="lastModifiedDateTime">The Timestamp type represents
        /// date and time information using ISO 8601 format and is always in
        /// UTC time. For example, midnight UTC on Jan 1, 2014 would look like
        /// this: '2014-01-01T00:00:00Z'</param>
        public MicrosoftgraphoutlookItem(string id = default(string), IDictionary<string, object> additionalProperties = default(IDictionary<string, object>), IList<string> categories = default(IList<string>), string changeKey = default(string), System.DateTime? createdDateTime = default(System.DateTime?), System.DateTime? lastModifiedDateTime = default(System.DateTime?))
            : base(additionalProperties, id)
        {
            // AdditionalProperties = additionalProperties;
            Categories = categories;
            ChangeKey = changeKey;
            CreatedDateTime = createdDateTime;
            LastModifiedDateTime = lastModifiedDateTime;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets unmatched properties from the message are deserialized
        /// this collection
        /// </summary>
        // [JsonExtensionData]
        // public IDictionary<string, object> AdditionalProperties { get; set; }

        /// <summary>
        /// Gets or sets the categories associated with the item
        /// </summary>
        [JsonProperty(PropertyName = "categories")]
        public IList<string> Categories { get; set; }

        /// <summary>
        /// Gets or sets identifies the version of the item. Every time the
        /// item is changed, changeKey changes as well. This allows Exchange to
        /// apply changes to the correct version of the object. Read-only.
        /// </summary>
        [JsonProperty(PropertyName = "changeKey")]
        public string ChangeKey { get; set; }

        /// <summary>
        /// Gets or sets the Timestamp type represents date and time
        /// information using ISO 8601 format and is always in UTC time. For
        /// example, midnight UTC on Jan 1, 2014 would look like this:
        /// '2014-01-01T00:00:00Z'
        /// </summary>
        [JsonProperty(PropertyName = "createdDateTime")]
        public System.DateTime? CreatedDateTime { get; set; }

        /// <summary>
        /// Gets or sets the Timestamp type represents date and time
        /// information using ISO 8601 format and is always in UTC time. For
        /// example, midnight UTC on Jan 1, 2014 would look like this:
        /// '2014-01-01T00:00:00Z'
        /// </summary>
        [JsonProperty(PropertyName = "lastModifiedDateTime")]
        public System.DateTime? LastModifiedDateTime { get; set; }

    }
}
