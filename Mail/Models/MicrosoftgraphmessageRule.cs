// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Graph.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// messageRule
    /// </summary>
    public partial class MicrosoftgraphmessageRule : Microsoftgraphentity
    {
        /// <summary>
        /// Initializes a new instance of the MicrosoftgraphmessageRule class.
        /// </summary>
        public MicrosoftgraphmessageRule()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MicrosoftgraphmessageRule class.
        /// </summary>
        /// <param name="additionalProperties">Unmatched properties from the
        /// message are deserialized this collection</param>
        /// <param name="id">Read-only.</param>
        /// <param name="additionalProperties">Unmatched properties from the
        /// message are deserialized this collection</param>
        /// <param name="displayName">The display name of the rule.</param>
        /// <param name="hasError">Indicates whether the rule is in an error
        /// condition. Read-only.</param>
        /// <param name="isEnabled">Indicates whether the rule is enabled to be
        /// applied to messages.</param>
        /// <param name="isReadOnly">Indicates if the rule is read-only and
        /// cannot be modified or deleted by the rules REST API.</param>
        /// <param name="sequence">Indicates the order in which the rule is
        /// executed, among other rules.</param>
        public MicrosoftgraphmessageRule(IDictionary<string, object> additionalProperties = default(IDictionary<string, object>), string id = default(string), MicrosoftgraphmessageRuleActions actions = default(MicrosoftgraphmessageRuleActions), MicrosoftgraphmessageRulePredicates conditions = default(MicrosoftgraphmessageRulePredicates), string displayName = default(string), MicrosoftgraphmessageRulePredicates exceptions = default(MicrosoftgraphmessageRulePredicates), bool? hasError = default(bool?), bool? isEnabled = default(bool?), bool? isReadOnly = default(bool?), int? sequence = default(int?))
            : base(additionalProperties, id)
        {
            // AdditionalProperties = additionalProperties;
            Actions = actions;
            Conditions = conditions;
            DisplayName = displayName;
            Exceptions = exceptions;
            HasError = hasError;
            IsEnabled = isEnabled;
            IsReadOnly = isReadOnly;
            Sequence = sequence;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets unmatched properties from the message are deserialized
        /// this collection
        /// </summary>
        // [JsonExtensionData]
        // public IDictionary<string, object> AdditionalProperties { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "actions")]
        public MicrosoftgraphmessageRuleActions Actions { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "conditions")]
        public MicrosoftgraphmessageRulePredicates Conditions { get; set; }

        /// <summary>
        /// Gets or sets the display name of the rule.
        /// </summary>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "exceptions")]
        public MicrosoftgraphmessageRulePredicates Exceptions { get; set; }

        /// <summary>
        /// Gets or sets indicates whether the rule is in an error condition.
        /// Read-only.
        /// </summary>
        [JsonProperty(PropertyName = "hasError")]
        public bool? HasError { get; set; }

        /// <summary>
        /// Gets or sets indicates whether the rule is enabled to be applied to
        /// messages.
        /// </summary>
        [JsonProperty(PropertyName = "isEnabled")]
        public bool? IsEnabled { get; set; }

        /// <summary>
        /// Gets or sets indicates if the rule is read-only and cannot be
        /// modified or deleted by the rules REST API.
        /// </summary>
        [JsonProperty(PropertyName = "isReadOnly")]
        public bool? IsReadOnly { get; set; }

        /// <summary>
        /// Gets or sets indicates the order in which the rule is executed,
        /// among other rules.
        /// </summary>
        [JsonProperty(PropertyName = "sequence")]
        public int? Sequence { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Conditions != null)
            {
                Conditions.Validate();
            }
            if (Exceptions != null)
            {
                Exceptions.Validate();
            }
            if (Sequence != null)
            {
                if (Sequence > 2147483647)
                {
                    throw new ValidationException(ValidationRules.InclusiveMaximum, "Sequence", 2147483647);
                }
                if (Sequence < -2147483648)
                {
                    throw new ValidationException(ValidationRules.InclusiveMinimum, "Sequence", -2147483648);
                }
            }
        }
    }
}
